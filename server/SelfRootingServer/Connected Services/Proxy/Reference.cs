//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SelfRootingServer.Proxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IProxy")]
    public interface IProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxy/GetContracts", ReplyAction="http://tempuri.org/IProxy/GetContractsResponse")]
        string GetContracts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxy/GetContracts", ReplyAction="http://tempuri.org/IProxy/GetContractsResponse")]
        System.Threading.Tasks.Task<string> GetContractsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxy/GetStations", ReplyAction="http://tempuri.org/IProxy/GetStationsResponse")]
        string GetStations(string contractName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxy/GetStations", ReplyAction="http://tempuri.org/IProxy/GetStationsResponse")]
        System.Threading.Tasks.Task<string> GetStationsAsync(string contractName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxy/GetAllStations", ReplyAction="http://tempuri.org/IProxy/GetAllStationsResponse")]
        string GetAllStations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxy/GetAllStations", ReplyAction="http://tempuri.org/IProxy/GetAllStationsResponse")]
        System.Threading.Tasks.Task<string> GetAllStationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProxyChannel : SelfRootingServer.Proxy.IProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProxyClient : System.ServiceModel.ClientBase<SelfRootingServer.Proxy.IProxy>, SelfRootingServer.Proxy.IProxy {
        
        public ProxyClient() {
        }
        
        public ProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetContracts() {
            return base.Channel.GetContracts();
        }
        
        public System.Threading.Tasks.Task<string> GetContractsAsync() {
            return base.Channel.GetContractsAsync();
        }
        
        public string GetStations(string contractName) {
            return base.Channel.GetStations(contractName);
        }
        
        public System.Threading.Tasks.Task<string> GetStationsAsync(string contractName) {
            return base.Channel.GetStationsAsync(contractName);
        }
        
        public string GetAllStations() {
            return base.Channel.GetAllStations();
        }
        
        public System.Threading.Tasks.Task<string> GetAllStationsAsync() {
            return base.Channel.GetAllStationsAsync();
        }
    }
}

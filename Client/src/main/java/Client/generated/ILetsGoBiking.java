
package Client.generated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ILetsGoBiking", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ILetsGoBiking {


    /**
     * 
     * @param destination
     * @param departure
     * @return
     *     returns Client.generated.ArrayOfItinerary
     */
    @WebMethod(operationName = "GetItinerary", action = "http://tempuri.org/ILetsGoBiking/GetItinerary")
    @WebResult(name = "GetItineraryResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetItinerary", targetNamespace = "http://tempuri.org/", className = "Client.generated.GetItinerary")
    @ResponseWrapper(localName = "GetItineraryResponse", targetNamespace = "http://tempuri.org/", className = "Client.generated.GetItineraryResponse")
    public ArrayOfItinerary getItinerary(
        @WebParam(name = "departure", targetNamespace = "http://tempuri.org/")
        String departure,
        @WebParam(name = "destination", targetNamespace = "http://tempuri.org/")
        String destination);

    /**
     * 
     * @param destination
     * @param departure
     * @return
     *     returns Client.generated.ArrayOfItinerary
     */
    @WebMethod(operationName = "UdateItinerary", action = "http://tempuri.org/ILetsGoBiking/UdateItinerary")
    @WebResult(name = "UdateItineraryResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "UdateItinerary", targetNamespace = "http://tempuri.org/", className = "Client.generated.UdateItinerary")
    @ResponseWrapper(localName = "UdateItineraryResponse", targetNamespace = "http://tempuri.org/", className = "Client.generated.UdateItineraryResponse")
    public ArrayOfItinerary udateItinerary(
        @WebParam(name = "departure", targetNamespace = "http://tempuri.org/")
        String departure,
        @WebParam(name = "destination", targetNamespace = "http://tempuri.org/")
        String destination);

    /**
     * 
     * @param destination
     * @param departure
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetItineraryOntheMQ", action = "http://tempuri.org/ILetsGoBiking/GetItineraryOntheMQ")
    @WebResult(name = "GetItineraryOntheMQResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetItineraryOntheMQ", targetNamespace = "http://tempuri.org/", className = "Client.generated.GetItineraryOntheMQ")
    @ResponseWrapper(localName = "GetItineraryOntheMQResponse", targetNamespace = "http://tempuri.org/", className = "Client.generated.GetItineraryOntheMQResponse")
    public String getItineraryOntheMQ(
        @WebParam(name = "departure", targetNamespace = "http://tempuri.org/")
        String departure,
        @WebParam(name = "destination", targetNamespace = "http://tempuri.org/")
        String destination);

    /**
     * 
     * @param destination
     * @param departure
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UdateItineraryOnTheMQ", action = "http://tempuri.org/ILetsGoBiking/UdateItineraryOnTheMQ")
    @WebResult(name = "UdateItineraryOnTheMQResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "UdateItineraryOnTheMQ", targetNamespace = "http://tempuri.org/", className = "Client.generated.UdateItineraryOnTheMQ")
    @ResponseWrapper(localName = "UdateItineraryOnTheMQResponse", targetNamespace = "http://tempuri.org/", className = "Client.generated.UdateItineraryOnTheMQResponse")
    public String udateItineraryOnTheMQ(
        @WebParam(name = "departure", targetNamespace = "http://tempuri.org/")
        String departure,
        @WebParam(name = "destination", targetNamespace = "http://tempuri.org/")
        String destination);

}
